// set as java application
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   // https://mvnrepository.com/artifact/org.json/json
compile group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'NodeStarter'

task Starter(type: JavaExec) {
  group 'simple'
  description 'Base sample'

  classpath = sourceSets.main.runtimeClasspath

  main = 'mergeSort.MergeSort'
  standardInput = System.in
  String port = "7000";
  String host = "localhost";
  //args 7000
  //args "localhost"
  if(project.hasProperty("port")){
    port = project.getProperty('port');
  }
  if(project.hasProperty("host")){
    host = project.getProperty('host');
  }
  args port
  args host
}

task Branch(type: JavaExec) {
  group 'simple'
  description 'Base sample'

  classpath = sourceSets.main.runtimeClasspath

  main = 'mergeSort.Branch'
  standardInput = System.in
  String port1 = "7000";
  String port2 = "8000";
  String port3 = "8001";
  String leftHost = "localhost";
  String rightHost = "localhost"
  //args 7000
  //args 8000
  //args 8001
  if(project.hasProperty("port1")){
    port1 = project.getProperty('port1');
  }
  if(project.hasProperty("port2")){
    port2 = project.getProperty('port2');
  }
  if(project.hasProperty("port3")){
    port3 = project.getProperty('port3');
  }
  if(project.hasProperty("leftHost")){
    leftHost = project.getProperty('leftHost');
  }
  if(project.hasProperty("rightHost")){
    rightHost = project.getProperty('rightHost');
  }
  args port1
  args port2
  args port3
  args leftHost
  args rightHost
}

task Sorter(type: JavaExec) {
  group 'simple'
  description 'Base sample'

  classpath = sourceSets.main.runtimeClasspath

  main = 'mergeSort.Sorter'
  standardInput = System.in
  //args 8000//used to be 8000
  String port = "8080";
  if(project.hasProperty("port")){
    port = project.getProperty('port');
  }
  args(port);
}